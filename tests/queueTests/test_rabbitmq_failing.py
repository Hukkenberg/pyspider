# Automatically generated by Pynguin.
import rabbitmq as module_0


def test_case_0():
    try:
        pika_queue_0 = None
        pika_queue_1 = module_0.PikaQueue(pika_queue_0)
    except BaseException:
        pass


def test_case_1():
    try:
        float_0 = -385.76
        amqp_queue_0 = module_0.AmqpQueue(float_0)
    except BaseException:
        pass


def test_case_2():
    try:
        dict_0 = {}
        amqp_queue_0 = module_0.AmqpQueue(dict_0, dict_0)
    except BaseException:
        pass


def test_case_3():
    try:
        str_0 = ''
        amqp_queue_0 = module_0.AmqpQueue(str_0, str_0)
    except BaseException:
        pass


def test_case_4():
    try:
        str_0 = 'q"N)ptLfr'
        bytes_0 = b'\xa2\x8b\xd8\xfd\x9c\xa3U\xd0\xe0*\x84'
        set_0 = set()
        list_0 = [str_0, str_0]
        list_1 = [str_0, bytes_0, list_0]
        pika_queue_0 = module_0.PikaQueue(set_0, list_0, list_1)
    except BaseException:
        pass


def test_case_5():
    try:
        int_0 = 1736
        dict_0 = {}
        int_1 = -2669
        amqp_queue_0 = module_0.AmqpQueue(int_0, dict_0, int_1)
    except BaseException:
        pass


def test_case_6():
    try:
        dict_0 = {}
        bytes_0 = b'K&\xd9Da\xd8l\xc3\xa8'
        list_0 = []
        pika_queue_0 = module_0.PikaQueue(dict_0, bytes_0, list_0, dict_0)
    except BaseException:
        pass


def test_case_7():
    try:
        tuple_0 = None
        bytes_0 = b'\xa3uz\xa9\x7f\xcc\t&\x8f\xa4\xa8\xa3\xb5X\xcc'
        set_0 = {bytes_0, bytes_0, tuple_0, tuple_0}
        amqp_queue_0 = module_0.AmqpQueue(tuple_0, bytes_0, set_0, tuple_0)
    except BaseException:
        pass
